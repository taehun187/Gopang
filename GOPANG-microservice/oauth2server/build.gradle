plugins {
    id 'java'
    id 'org.springframework.boot' version '3.1.2'
    id 'io.spring.dependency-management' version '1.1.3'
    id 'com.palantir.docker' version '0.35.0'
}

ext {
    springCloudVersion = '2022.0.4'
    authorizationServerVersion = '1.1.3'
}

group = 'com.gopang'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = '17'
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-validation'

    //== Spring Oauth2 ==//
    implementation 'org.springframework.security:spring-security-cas'
    implementation 'org.springframework.security:spring-security-oauth2-client'
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-authorization-server'
    implementation "org.springframework.security:spring-security-oauth2-authorization-server:${authorizationServerVersion}"
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-resource-server'

    //== Spring Cloud ==//
    implementation 'org.springframework.cloud:spring-cloud-starter-bootstrap'
    implementation 'org.springframework.cloud:spring-cloud-starter-config'
    implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client:4.0.3'

    // DB
    runtimeOnly 'org.mariadb.jdbc:mariadb-java-client'

    // lombook
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
}

docker {
    name("gopang/${project.name}:${version}")
    dockerfile file('Dockerfile')
    files bootJar
    buildArgs(['JAR_FILE': bootJar.archiveFileName.get()])
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

tasks.named('test') {
    useJUnitPlatform()
}
