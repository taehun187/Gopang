version: "3"
services:
  database:
    image: mysql:latest
    container_name: mysql
    ports:
      - "3306:3306"
    environment:
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
    volumes:
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      backend:
        aliases:
          - "database"
    healthcheck:
      test: [ "CMD", "mysqladmin", "ping", "-h", "localhost" ]
      interval: 1m
      timeout: 5s
      retries: 3

  gopangpayment:
    image: gopangpayment:0.0.1
    container_name: gopangpayment
    environment:
      PROFILE: ${PROFILE}
      DATABASESERVER_PORT: "3306"
    depends_on:
      database:
        condition: service_healthy
    ports:
      - "8080:8080"
    networks:
      - backend

  zookeeper:
    image: bitnami/zookeeper:latest
    container_name: zookeeper
    environment:
      - ALLOW_ANONYMOUS_LOGIN=${ALLOW_ANONYMOUS_LOGIN}
    ports:
      - 2181:2181
    networks:
      backend:
        aliases:
          - "zookeeper"

  kafkaserver:
    image: bitnami/kafka:latest
    container_name: kafka
    ports:
      - 9092:9092
    environment:
      - KAFKA_ADVERTISED_HOST_NAME=${KAFKA_ADVERTISED_HOST_NAME}
      - KAFKA_ADVERTISED_PORT=${KAFKA_ADVERTISED_PORT}
      - KAFKA_ZOOKEEPER_CONNECT=${KAFKA_ZOOKEEPER_CONNECT}
      - KAFKA_CREATE_TOPICS=${KAFKA_CREATE_TOPICS}
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
    depends_on:
      - zookeeper
    networks:
      backend:
        aliases:
          - "kafka"

networks:
  backend:
    driver: bridge